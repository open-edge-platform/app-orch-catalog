// Code generated by ent, DO NOT EDIT.

package deploymentrequirement

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

const (
	// Label holds the string label denoting the deploymentrequirement type in the database.
	Label = "deployment_requirement"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeProfileFk holds the string denoting the profile_fk edge name in mutations.
	EdgeProfileFk = "profile_fk"
	// EdgeDeploymentPackageFk holds the string denoting the deployment_package_fk edge name in mutations.
	EdgeDeploymentPackageFk = "deployment_package_fk"
	// EdgeDeploymentProfileFk holds the string denoting the deployment_profile_fk edge name in mutations.
	EdgeDeploymentProfileFk = "deployment_profile_fk"
	// Table holds the table name of the deploymentrequirement in the database.
	Table = "deployment_requirements"
	// ProfileFkTable is the table that holds the profile_fk relation/edge.
	ProfileFkTable = "deployment_requirements"
	// ProfileFkInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileFkInverseTable = "profiles"
	// ProfileFkColumn is the table column denoting the profile_fk relation/edge.
	ProfileFkColumn = "profile_deployment_requirements"
	// DeploymentPackageFkTable is the table that holds the deployment_package_fk relation/edge.
	DeploymentPackageFkTable = "deployment_requirements"
	// DeploymentPackageFkInverseTable is the table name for the DeploymentPackage entity.
	// It exists in this package in order to avoid circular dependency with the "deploymentpackage" package.
	DeploymentPackageFkInverseTable = "deployment_packages"
	// DeploymentPackageFkColumn is the table column denoting the deployment_package_fk relation/edge.
	DeploymentPackageFkColumn = "deployment_requirement_deployment_package_fk"
	// DeploymentProfileFkTable is the table that holds the deployment_profile_fk relation/edge.
	DeploymentProfileFkTable = "deployment_requirements"
	// DeploymentProfileFkInverseTable is the table name for the DeploymentProfile entity.
	// It exists in this package in order to avoid circular dependency with the "deploymentprofile" package.
	DeploymentProfileFkInverseTable = "deployment_profiles"
	// DeploymentProfileFkColumn is the table column denoting the deployment_profile_fk relation/edge.
	DeploymentProfileFkColumn = "deployment_requirement_deployment_profile_fk"
)

// Columns holds all SQL columns for deploymentrequirement fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "deployment_requirements"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"deployment_requirement_deployment_package_fk",
	"deployment_requirement_deployment_profile_fk",
	"profile_deployment_requirements",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the DeploymentRequirement queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByProfileFkField orders the results by profile_fk field.
func ByProfileFkField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newProfileFkStep(), sql.OrderByField(field, opts...))
	}
}

// ByDeploymentPackageFkField orders the results by deployment_package_fk field.
func ByDeploymentPackageFkField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newDeploymentPackageFkStep(), sql.OrderByField(field, opts...))
	}
}

// ByDeploymentProfileFkField orders the results by deployment_profile_fk field.
func ByDeploymentProfileFkField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newDeploymentProfileFkStep(), sql.OrderByField(field, opts...))
	}
}
func newProfileFkStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(ProfileFkInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, true, ProfileFkTable, ProfileFkColumn),
	)
}
func newDeploymentPackageFkStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(DeploymentPackageFkInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, false, DeploymentPackageFkTable, DeploymentPackageFkColumn),
	)
}
func newDeploymentProfileFkStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(DeploymentProfileFkInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, false, DeploymentProfileFkTable, DeploymentProfileFkColumn),
	)
}
