# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

---
{
  "auth": {
    "adminUser": "admin",
    "adminPassword": "ChangeMeOn1stLogin!"
  },
  "postgresql": {
    "enabled": true
  },
  "keycloakConfigCli": {
    "enabled": true,
    "command": [
      "java",
      "-jar",
      "/opt/bitnami/keycloak-config-cli/keycloak-config-cli.jar"
    ],
    "configuration": {
      "realm-master.json": {
        "realm": "master",
        "displayName": "Keycloak",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "PS512",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 3600,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 5400,
        "ssoSessionMaxLifespan": 43200,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": true,
        "permanentLockout": false,
        "maxTemporaryLockouts": 0,
        "bruteForceStrategy": "MULTIPLE",
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 300,
        "quickLoginCheckMilliSeconds": 200,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 5,
        "roles": {
          "realm": [
            {
              "name": "11111111-1111-1111-1111-222222222222_tc-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "cluster-artifacts-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "cluster-templates-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "account/manage-account",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "catalog-other-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-111111111111_project-update-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "default-roles-master",
              "description": "${role_default-roles}",
              "composite": true,
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "manage-account",
                    "view-profile"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_im-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "cluster-templates-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_ao-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_cl-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_alrt-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "app-deployment-manager-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "clusters-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_im-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "catalog-restricted-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_en-ob",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "app-service-proxy-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "create-realm",
              "description": "${role_create-realm}",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "alrt-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "alrt-rx-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "org-update-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_cl-tpl-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "infra-manager-core-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-111111111111_project-delete-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-111111111111_project-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "org-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "en-agent-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "infra-manager-core-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "app-resource-manager-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-111111111111_project-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "account/view-profile",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "app-service-proxy-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "rs-access-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_cat-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "org-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "catalog-publisher-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_alrt-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_reg-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "org-delete-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "app-vm-console-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "secrets-root-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "clusters-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "catalog-other-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "cluster-artifacts-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "admin",
              "description": "${role_admin}",
              "composite": true,
              "composites": {
                "realm": [
                  "create-realm"
                ],
                "client": {
                  "master-realm": [
                    "view-events",
                    "manage-users",
                    "view-users",
                    "view-clients",
                    "query-realms",
                    "manage-realm",
                    "view-realm",
                    "view-authorization",
                    "manage-identity-providers",
                    "query-groups",
                    "manage-events",
                    "manage-authorization",
                    "manage-clients",
                    "view-identity-providers",
                    "create-client",
                    "query-users",
                    "impersonation",
                    "query-clients"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "co-m2m-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_cl-tpl-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "catalog-publisher-write-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_cl-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_reg-a",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_cat-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "catalog-restricted-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "alrt-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "app-deployment-manager-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "app-resource-manager-read-role",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "11111111-1111-1111-1111-222222222222_en-agent-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "rs-proxy-r",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            },
            {
              "name": "ao-m2m-rw",
              "composite": false,
              "clientRole": false,
              "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b",
              "attributes": {}
            }
          ],
          "client": {
            "edgenode-e05dd9ff-39c2-b047-841a-a3f120abe447": [],
            "host-manager-m2m-client": [
              {
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "88870248-f4fc-4a1c-b5ee-57adb5dcca9e",
                "attributes": {}
              }
            ],
            "ktc-m2m-client": [
              {
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "274aaaa1-1257-4262-8c93-79c9b65b6672",
                "attributes": {}
              }
            ],
            "security-admin-console": [],
            "en-m2m-template-client": [
              {
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "71262114-fd47-4e59-9729-5eff0b0e107e",
                "attributes": {}
              }
            ],
            "system-client": [],
            "webui-client": [],
            "account-console": [],
            "broker": [
              {
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "8b102f03-ff54-4404-bc34-6ce7a14f3d9f",
                "attributes": {}
              }
            ],
            "master-realm": [
              {
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "master-realm": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "master-realm": [
                      "query-groups",
                      "query-users"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              },
              {
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "0f0430ef-12f3-41a0-a930-74e1d1157be5",
                "attributes": {}
              }
            ],
            "3rd-party-host-manager-m2m-client": [
              {
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "3872ba5e-65b9-4b8c-aec8-d6ede68d44e8",
                "attributes": {}
              }
            ],
            "alerts-m2m-client": [
              {
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "c424a4cb-7ced-4c02-8ca7-18ea3d377d4a",
                "attributes": {}
              }
            ],
            "cluster-management-client": [
              {
                "name": "base-role",
                "composite": false,
                "clientRole": true,
                "containerId": "c3974946-c8c0-4cab-85f7-b43703f810b2",
                "attributes": {}
              },
              {
                "name": "standard-role",
                "composite": false,
                "clientRole": true,
                "containerId": "c3974946-c8c0-4cab-85f7-b43703f810b2",
                "attributes": {}
              },
              {
                "name": "restricted-role",
                "composite": false,
                "clientRole": true,
                "containerId": "c3974946-c8c0-4cab-85f7-b43703f810b2",
                "attributes": {}
              }
            ],
            "docsui-client": [],
            "admin-cli": [],
            "edge-manager-m2m-client": [
              {
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "330e7c88-4bbb-4ec1-b7b9-868790f4a9e4",
                "attributes": {}
              }
            ],
            "registry-client": [
              {
                "name": "registry-viewer-role",
                "composite": false,
                "clientRole": true,
                "containerId": "63581a4f-29b3-4eb8-8294-acf2aff19703",
                "attributes": {}
              },
              {
                "name": "registry-admin-role",
                "composite": false,
                "clientRole": true,
                "containerId": "63581a4f-29b3-4eb8-8294-acf2aff19703",
                "attributes": {}
              },
              {
                "name": "registry-editor-role",
                "composite": false,
                "clientRole": true,
                "containerId": "63581a4f-29b3-4eb8-8294-acf2aff19703",
                "attributes": {}
              }
            ],
            "telemetry-client": [
              {
                "name": "viewer",
                "composite": false,
                "clientRole": true,
                "containerId": "fc0d944e-ed46-4cbe-838e-96061fa5e7c9",
                "attributes": {}
              },
              {
                "name": "admin",
                "composite": false,
                "clientRole": true,
                "containerId": "fc0d944e-ed46-4cbe-838e-96061fa5e7c9",
                "attributes": {}
              }
            ],
            "account": [
              {
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              },
              {
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              },
              {
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              },
              {
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              },
              {
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              },
              {
                "name": "view-groups",
                "description": "${role_view-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              },
              {
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              },
              {
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "2d1d959f-d022-46bc-a33c-d53940246ed0",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [
          {
            "name": "11111111-1111-1111-1111-111111111111_Project-Manager-Group",
            "path": "/11111111-1111-1111-1111-111111111111_Project-Manager-Group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "11111111-1111-1111-1111-111111111111_project-delete-role",
              "11111111-1111-1111-1111-111111111111_project-read-role",
              "11111111-1111-1111-1111-111111111111_project-write-role",
              "11111111-1111-1111-1111-111111111111_project-update-role"
            ],
            "clientRoles": {}
          },
          {
            "name": "11111111-1111-1111-1111-222222222222_Edge-Manager-Group",
            "path": "/11111111-1111-1111-1111-222222222222_Edge-Manager-Group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "11111111-1111-1111-1111-222222222222_tc-r",
              "11111111-1111-1111-1111-222222222222_ao-rw",
              "11111111-1111-1111-1111-222222222222_cl-rw",
              "account/manage-account",
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "account/view-profile",
              "11111111-1111-1111-1111-222222222222_reg-a",
              "11111111-1111-1111-1111-222222222222_cat-rw",
              "11111111-1111-1111-1111-222222222222_im-r",
              "11111111-1111-1111-1111-222222222222_alrt-rw",
              "11111111-1111-1111-1111-222222222222_reg-r",
              "11111111-1111-1111-1111-222222222222_cl-tpl-rw"
            ],
            "clientRoles": {}
          },
          {
            "name": "11111111-1111-1111-1111-222222222222_Edge-Node-M2M-Service-Account",
            "path": "/11111111-1111-1111-1111-222222222222_Edge-Node-M2M-Service-Account",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "rs-access-r",
              "11111111-1111-1111-1111-222222222222_cat-r",
              "11111111-1111-1111-1111-222222222222_reg-r",
              "rs-proxy-r",
              "11111111-1111-1111-1111-222222222222_en-agent-rw"
            ],
            "clientRoles": {}
          },
          {
            "name": "11111111-1111-1111-1111-222222222222_Edge-Onboarding-Group",
            "path": "/11111111-1111-1111-1111-222222222222_Edge-Onboarding-Group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "11111111-1111-1111-1111-222222222222_en-ob",
              "rs-access-r"
            ],
            "clientRoles": {}
          },
          {
            "name": "11111111-1111-1111-1111-222222222222_Edge-Operator-Group",
            "path": "/11111111-1111-1111-1111-222222222222_Edge-Operator-Group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "11111111-1111-1111-1111-222222222222_tc-r",
              "11111111-1111-1111-1111-222222222222_ao-rw",
              "11111111-1111-1111-1111-222222222222_cl-tpl-r",
              "11111111-1111-1111-1111-222222222222_cat-r",
              "account/manage-account",
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "account/view-profile",
              "11111111-1111-1111-1111-222222222222_cl-r",
              "11111111-1111-1111-1111-222222222222_im-r",
              "11111111-1111-1111-1111-222222222222_reg-r",
              "11111111-1111-1111-1111-222222222222_alrt-r"
            ],
            "clientRoles": {}
          },
          {
            "name": "11111111-1111-1111-1111-222222222222_Host-Manager-Group",
            "path": "/11111111-1111-1111-1111-222222222222_Host-Manager-Group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "11111111-1111-1111-1111-222222222222_tc-r",
              "11111111-1111-1111-1111-222222222222_en-ob",
              "account/manage-account",
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "account/view-profile",
              "11111111-1111-1111-1111-222222222222_im-rw"
            ],
            "clientRoles": {}
          },
          {
            "name": "apps-m2m-service-account",
            "path": "/apps-m2m-service-account",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "co-m2m-rw",
              "ao-m2m-rw"
            ],
            "clientRoles": {}
          },
          {
            "name": "edge-manager-group",
            "path": "/edge-manager-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "app-resource-manager-write-role",
              "cluster-artifacts-write-role",
              "cluster-templates-read-role",
              "catalog-other-read-role",
              "app-service-proxy-write-role",
              "cluster-templates-write-role",
              "catalog-publisher-read-role",
              "app-deployment-manager-write-role",
              "clusters-read-role",
              "catalog-restricted-write-role",
              "app-vm-console-write-role",
              "clusters-write-role",
              "app-service-proxy-read-role",
              "infra-manager-core-read-role",
              "catalog-other-write-role",
              "cluster-artifacts-read-role",
              "catalog-publisher-write-role",
              "catalog-restricted-read-role",
              "app-deployment-manager-read-role",
              "app-resource-manager-read-role",
              "alrt-rw"
            ],
            "clientRoles": {
              "telemetry-client": [
                "viewer"
              ],
              "registry-client": [
                "registry-editor-role"
              ],
              "cluster-management-client": [
                "base-role",
                "standard-role"
              ]
            }
          },
          {
            "name": "edge-operator-group",
            "path": "/edge-operator-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "app-resource-manager-write-role",
              "cluster-artifacts-write-role",
              "app-vm-console-write-role",
              "clusters-write-role",
              "app-service-proxy-read-role",
              "cluster-templates-read-role",
              "catalog-other-read-role",
              "alrt-r",
              "app-service-proxy-write-role",
              "infra-manager-core-read-role",
              "cluster-artifacts-read-role",
              "catalog-publisher-read-role",
              "app-deployment-manager-read-role",
              "app-resource-manager-read-role",
              "app-deployment-manager-write-role",
              "clusters-read-role"
            ],
            "clientRoles": {
              "registry-client": [
                "registry-viewer-role"
              ],
              "telemetry-client": [
                "viewer"
              ]
            }
          },
          {
            "name": "host-manager-group",
            "path": "/host-manager-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "infra-manager-core-read-role",
              "infra-manager-core-write-role"
            ],
            "clientRoles": {
              "telemetry-client": [
                "viewer"
              ]
            }
          },
          {
            "name": "iam-admin-group",
            "path": "/iam-admin-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "admin",
              "secrets-root-role"
            ],
            "clientRoles": {
              "master-realm": [
                "manage-clients",
                "view-users",
                "query-users"
              ],
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          {
            "name": "org-admin-group",
            "path": "/org-admin-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "org-write-role",
              "org-read-role",
              "org-update-role",
              "org-delete-role"
            ],
            "clientRoles": {}
          },
          {
            "name": "registry-app-admin-group",
            "path": "/registry-app-admin-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [],
            "clientRoles": {}
          },
          {
            "name": "registry-app-editor-group",
            "path": "/registry-app-editor-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [],
            "clientRoles": {}
          },
          {
            "name": "registry-app-viewer-group",
            "path": "/registry-app-viewer-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [],
            "clientRoles": {}
          },
          {
            "name": "service-admin-group",
            "path": "/service-admin-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "alrt-rx-rw",
              "infra-manager-core-read-role",
              "rs-access-r",
              "alrt-rw",
              "infra-manager-core-write-role"
            ],
            "clientRoles": {
              "registry-client": [
                "registry-admin-role"
              ],
              "telemetry-client": [
                "admin"
              ],
              "master-realm": [
                "view-users",
                "manage-clients",
                "query-users"
              ],
              "account": [
                "manage-account",
                "view-profile"
              ],
              "cluster-management-client": [
                "base-role",
                "standard-role",
                "restricted-role"
              ]
            }
          },
          {
            "name": "sre-admin-group",
            "path": "/sre-admin-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "alrt-r"
            ],
            "clientRoles": {
              "telemetry-client": [
                "viewer"
              ],
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          {
            "name": "sre-group",
            "path": "/sre-group",
            "subGroups": [],
            "attributes": {},
            "realmRoles": [
              "clusters-write-role",
              "cluster-templates-read-role",
              "alrt-r",
              "clusters-read-role",
              "infra-manager-core-read-role"
            ],
            "clientRoles": {
              "telemetry-client": [
                "viewer"
              ],
              "cluster-management-client": [
                "base-role",
                "restricted-role"
              ]
            }
          }
        ],
        "defaultRole": {
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "clientRole": false,
          "containerId": "707db489-8b52-4ddd-9120-5dba16295b4b"
        },
        "requiredCredentials": [
          "password"
        ],
        "passwordPolicy": "length(14) and digits(1) and specialChars(1) and upperCase(1) and lowerCase(1)",
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpPolicyCodeReusable": false,
        "otpSupportedApplications": [
          "totpAppFreeOTPName",
          "totpAppGoogleName",
          "totpAppMicrosoftAuthenticatorName"
        ],
        "localizationTexts": {},
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256",
          "RS256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyExtraOrigins": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256",
          "RS256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessExtraOrigins": [],
        "users": [
          {
            "username": "sample-org-admin",
            "email": "sample-org-admin@sample-org.com",
            "emailVerified": true,
            "createdTimestamp": 1742556940907,
            "enabled": true,
            "totp": false,
            "credentials": [
              {
                "type": "password",
                "createdDate": 1742556940949,
                "secretData": "{\"value\":\"qLh+lfJUzLkqCaGE0c+5Xpzhnmdbvu5FTmYjJgS0Nrc=\",\"salt\":\"uM0V6ewVGuQJ6XTDhCLXeg==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-master"
            ],
            "notBefore": 0,
            "groups": [
              "/11111111-1111-1111-1111-111111111111_Project-Manager-Group"
            ]
          },
          {
            "username": "sample-project-api-user",
            "email": "sample-project-api-user@sample-org.com",
            "emailVerified": true,
            "createdTimestamp": 1742556961241,
            "enabled": true,
            "totp": false,
            "credentials": [
              {
                "type": "password",
                "createdDate": 1742556961283,
                "secretData": "{\"value\":\"K4si9JElgeAxU073UwrgWk+nl3/eUQrhX0HMR+6rUEw=\",\"salt\":\"DWtpOlU6ei95bBfJemlU8A==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "default-roles-master"
            ],
            "notBefore": 0,
            "groups": [
              "/11111111-1111-1111-1111-222222222222_Host-Manager-Group"
            ]
          },
          {
            "username": "sample-project-edge-mgr",
            "email": "sample-project-edge-mgr@sample-org.com",
            "emailVerified": true,
            "createdTimestamp": 1742556961875,
            "enabled": true,
            "totp": false,
            "credentials": [
              {
                "type": "password",
                "createdDate": 1742556961921,
                "secretData": "{\"value\":\"dBxzaLfwSu9qaymNAaYKOlyugqPNYpOTUANlE2gVXI4=\",\"salt\":\"iYt8LTKLr/KqDzIFUpYHTA==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "default-roles-master"
            ],
            "notBefore": 0,
            "groups": [
              "/11111111-1111-1111-1111-222222222222_Edge-Manager-Group"
            ]
          },
          {
            "username": "sample-project-edge-op",
            "email": "sample-project-edge-op@sample-org.com",
            "emailVerified": true,
            "createdTimestamp": 1742556961770,
            "enabled": true,
            "totp": false,
            "credentials": [
              {
                "type": "password",
                "createdDate": 1742556961806,
                "secretData": "{\"value\":\"/Y+r2NKEurOotpZokCdwpqdSnYxC8Y5hb8BazCNXZwM=\",\"salt\":\"qxFnCTyAGc/1dpTs37rQnw==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "default-roles-master"
            ],
            "notBefore": 0,
            "groups": [
              "/11111111-1111-1111-1111-222222222222_Edge-Operator-Group"
            ]
          },
          {
            "username": "sample-project-en-svc-account",
            "email": "sample-project-en-svc-account@sample-org.com",
            "emailVerified": true,
            "createdTimestamp": 1742556961355,
            "enabled": true,
            "totp": false,
            "credentials": [
              {
                "type": "password",
                "createdDate": 1742556961398,
                "secretData": "{\"value\":\"lLqoa3pkYOH9DFJHHHMPyvOFX72zSINK/AJPaYjtd/s=\",\"salt\":\"oC+zYzoCfa2HRbkF+M4FrQ==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "default-roles-master"
            ],
            "notBefore": 0,
            "groups": [
              "/11111111-1111-1111-1111-222222222222_Edge-Node-M2M-Service-Account"
            ]
          },
          {
            "username": "sample-project-onboarding-user",
            "email": "sample-project-onboarding-user@sample-org.com",
            "emailVerified": true,
            "createdTimestamp": 1742556961469,
            "enabled": true,
            "totp": false,
            "credentials": [
              {
                "type": "password",
                "createdDate": 1742556961506,
                "secretData": "{\"value\":\"RsbSvGLsqXh0pXCTVWjblQx9pTP+2QCwWs+ovC0Cdls=\",\"salt\":\"BcW/HLvs2JYNH6YRwWwEig==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "11111111-1111-1111-1111-111111111111_11111111-1111-1111-1111-222222222222_m",
              "default-roles-master"
            ],
            "notBefore": 0,
            "groups": [
              "/11111111-1111-1111-1111-222222222222_Edge-Onboarding-Group"
            ]
          },
          {
            "username": "service-account-3rd-party-host-manager-m2m-client",
            "emailVerified": false,
            "createdTimestamp": 1742555320784,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "3rd-party-host-manager-m2m-client",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "rs-access-r",
              "default-roles-master"
            ],
            "clientRoles": {
              "master-realm": [
                "manage-authorization",
                "manage-clients",
                "manage-users",
                "view-clients",
                "view-users",
                "create-client",
                "query-clients",
                "view-realm"
              ],
              "3rd-party-host-manager-m2m-client": [
                "uma_protection"
              ]
            },
            "notBefore": 0,
            "groups": []
          },
          {
            "username": "service-account-alerts-m2m-client",
            "emailVerified": false,
            "createdTimestamp": 1742555320347,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "alerts-m2m-client",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-master"
            ],
            "clientRoles": {
              "master-realm": [
                "view-users"
              ],
              "alerts-m2m-client": [
                "uma_protection"
              ]
            },
            "notBefore": 0,
            "groups": []
          },
          {
            "username": "service-account-edge-manager-m2m-client",
            "emailVerified": false,
            "createdTimestamp": 1742555320874,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "edge-manager-m2m-client",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-master"
            ],
            "clientRoles": {
              "edge-manager-m2m-client": [
                "uma_protection"
              ]
            },
            "notBefore": 0,
            "groups": [
              "/apps-m2m-service-account",
              "/edge-manager-group"
            ]
          },
          {
            "username": "service-account-edgenode-e05dd9ff-39c2-b047-841a-a3f120abe447",
            "emailVerified": false,
            "createdTimestamp": 1742557677692,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "edgenode-e05dd9ff-39c2-b047-841a-a3f120abe447",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-master"
            ],
            "notBefore": 0,
            "groups": [
              "/11111111-1111-1111-1111-222222222222_Edge-Node-M2M-Service-Account"
            ]
          },
          {
            "username": "service-account-en-m2m-template-client",
            "emailVerified": false,
            "createdTimestamp": 1742555320981,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "en-m2m-template-client",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "rs-access-r",
              "default-roles-master",
              "en-agent-rw"
            ],
            "clientRoles": {
              "en-m2m-template-client": [
                "uma_protection"
              ]
            },
            "notBefore": 0,
            "groups": []
          },
          {
            "username": "service-account-host-manager-m2m-client",
            "emailVerified": false,
            "createdTimestamp": 1742555320552,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "host-manager-m2m-client",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "rs-access-r",
              "default-roles-master"
            ],
            "clientRoles": {
              "host-manager-m2m-client": [
                "uma_protection"
              ],
              "master-realm": [
                "manage-authorization",
                "manage-clients",
                "manage-users",
                "view-clients",
                "view-users",
                "create-client",
                "query-clients",
                "view-realm"
              ]
            },
            "notBefore": 0,
            "groups": []
          },
          {
            "username": "service-account-ktc-m2m-client",
            "emailVerified": false,
            "createdTimestamp": 1742555320683,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "ktc-m2m-client",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "admin",
              "rs-access-r",
              "default-roles-master",
              "create-realm"
            ],
            "clientRoles": {
              "ktc-m2m-client": [
                "uma_protection"
              ],
              "master-realm": [
                "manage-authorization",
                "manage-clients",
                "manage-users",
                "view-clients",
                "view-users",
                "create-client",
                "query-clients"
              ]
            },
            "notBefore": 0,
            "groups": []
          }
        ],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account",
                "view-groups"
              ]
            }
          ]
        },
        "clients": [
          {
            "clientId": "3rd-party-host-manager-m2m-client",
            "name": "3rd Party Host Manager Client",
            "description": "Client for the 3rd party Host Manager to use in creating edgenode m2m clients",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "DynMPZ1fQwE1zkj4199RhmVM8yS7QA2B",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1742555320",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "service_account",
              "acr",
              "profile",
              "roles",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:3rd-party-host-manager-m2m-client:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:3rd-party-host-manager-m2m-client:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/master/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/master/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "organization",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/master/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/master/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "organization",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "client.use.lightweight.access.token.enabled": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "organization",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "clientId": "alerts-m2m-client",
            "name": "Alerts M2M Client",
            "description": "Client for Alerts",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "TQGRsSPo0saJOAe7DXH2W1HRgsgT0FrK",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1742555320",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "service_account",
              "acr",
              "profile",
              "roles",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:alerts-m2m-client:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:alerts-m2m-client:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "organization",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "clientId": "cluster-management-client",
            "name": "Cluster Management Client",
            "rootUrl": "https://rancher.kind.internal",
            "adminUrl": "https://rancher.kind.internal",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "https://rancher.kind.internal/verify-auth"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "backchannel.logout.session.required": "true",
              "client_credentials.use_refresh_token": "false",
              "require.pushed.authorization.requests": "false",
              "tls.client.certificate.bound.access.tokens": "false",
              "oauth2.device.authorization.grant.enabled": "false",
              "display.on.consent.screen": "false",
              "backchannel.logout.revoke.offline.tokens": "false",
              "token.response.type.bearer.lower-case": "false",
              "use.refresh.tokens": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
              {
                "name": "Client Audience",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-mapper",
                "consentRequired": false,
                "config": {
                  "included.client.audience": "cluster-management-client",
                  "id.token.claim": "false",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "false"
                }
              },
              {
                "name": "Groups Mapper",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-group-membership-mapper",
                "consentRequired": false,
                "config": {
                  "full.path": "false",
                  "id.token.claim": "false",
                  "access.token.claim": "false",
                  "claim.name": "groups",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "name": "Group Path",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-group-membership-mapper",
                "consentRequired": false,
                "config": {
                  "full.path": "true",
                  "id.token.claim": "false",
                  "access.token.claim": "false",
                  "claim.name": "full_group_path",
                  "userinfo.token.claim": "true"
                }
              }
            ],
            "defaultClientScopes": [
              "profile",
              "roles",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "offline_access",
              "groups"
            ]
          },
          {
            "clientId": "docsui-client",
            "name": "DocsUI Client",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1683218404",
              "backchannel.logout.session.required": "true",
              "post.logout.redirect.uris": "+",
              "display.on.consent.screen": "false",
              "oauth2.device.authorization.grant.enabled": "true",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "offline_access",
              "groups"
            ]
          },
          {
            "clientId": "edge-manager-m2m-client",
            "name": "Edge Manager M2M Client",
            "description": "Client for the accessing Orchestrator with Edge-Manager persona",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "aszdKWJJOrpZya3W05RYlgjdkZq3Bekb",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1742555320",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "service_account",
              "roles",
              "groups",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "offline_access"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:edge-manager-m2m-client:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:edge-manager-m2m-client:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "clientId": "edgenode-e05dd9ff-39c2-b047-841a-a3f120abe447",
            "name": "Edge Node [tenantID=11111111-1111-1111-1111-222222222222, UUID=e05dd9ff-39c2-b047-841a-a3f120abe447]",
            "description": "Client to use by Edge Node [tenantID=11111111-1111-1111-1111-222222222222, UUID=e05dd9ff-39c2-b047-841a-a3f120abe447], created by Onboarding Manager at 2025-03-21 11:47:57.658523169 +0000 UTC",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "lGpPOUgjKDKlPRmAocWsqJbKB5HdUALf",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1742557677",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "service_account",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "clientId": "en-m2m-template-client",
            "name": "Edge Node M2M Template Client",
            "description": "Client to use as basis for Roles to assign to new Edge Node M2M clients",
            "surrogateAuthRequired": false,
            "enabled": false,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "FaxSJacPCX5mCehCtC6qHYkDv2AXwDLv",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1742555320",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "service_account",
              "acr",
              "profile",
              "roles",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:en-m2m-template-client:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:en-m2m-template-client:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "clientId": "host-manager-m2m-client",
            "name": "Host Manager Client",
            "description": "Client for the EN Host Manager to use in creating edgenode m2m clients",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "ew6eFvOP0ZH9qvWHfhIT64FFmExSQgbj",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1742555320",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "service_account",
              "acr",
              "profile",
              "roles",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:host-manager-m2m-client:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:host-manager-m2m-client:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "clientId": "ktc-m2m-client",
            "name": "Keycloak Tenant Controller client",
            "description": "Client for the Keycloak Tenant Controller to use in creating Tenant specific roles and groups in Keycloak",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "p0Xzm3dpWqVme0K5zWxi3BCrrORXobW6",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1742555320",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "web-origins",
              "service_account",
              "acr",
              "profile",
              "roles",
              "groups",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:ktc-m2m-client:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:ktc-m2m-client:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "clientId": "master-realm",
            "name": "master Realm",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "attributes": {
              "realm_client": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "organization",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "clientId": "registry-client",
            "name": "Registry Client",
            "rootUrl": "https://registry-oci.kind.internal",
            "adminUrl": "https://registry-oci.kind.internal",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/c/oidc/callback"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1683218404",
              "backchannel.logout.session.required": "true",
              "post.logout.redirect.uris": "+",
              "display.on.consent.screen": "false",
              "oauth2.device.authorization.grant.enabled": "false",
              "use.jwks.url": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "roles",
              "profile",
              "groups",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "offline_access"
            ]
          },
          {
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/master/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/master/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "client.use.lightweight.access.token.enabled": "true",
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "organization",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "clientId": "system-client",
            "name": "System Client",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "backchannel.logout.session.required": "true",
              "oauth2.device.authorization.grant.enabled": "true",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "offline_access",
              "groups"
            ]
          },
          {
            "clientId": "telemetry-client",
            "name": "Telemetry Client",
            "rootUrl": "https://observability-ui.kind.internal",
            "adminUrl": "https://observability-ui.kind.internal",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "https://observability-ui.kind.internal/login/generic_oauth",
              "https://observability-admin.kind.internal/login/generic_oauth"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1683218404",
              "backchannel.logout.session.required": "true",
              "post.logout.redirect.uris": "+",
              "display.on.consent.screen": "false",
              "oauth2.device.authorization.grant.enabled": "false",
              "use.jwks.url": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "offline_access",
              "groups"
            ]
          },
          {
            "clientId": "webui-client",
            "name": "WebUI Client",
            "rootUrl": "https://web-ui.kind.internal",
            "adminUrl": "https://web-ui.kind.internal",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "http://localhost:8084",
              "http://localhost:8083",
              "https://app-service-proxy.kind.internal/app-service-proxy-index.html*",
              "http://localhost:8080",
              "https://kind.internal",
              "https://web-ui.kind.internal",
              "http://localhost:8082",
              "http://localhost:8081",
              "https://vnc.kind.internal/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "realm_client": "false",
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1683218404",
              "backchannel.logout.session.required": "true",
              "post.logout.redirect.uris": "+",
              "display.on.consent.screen": "false",
              "oauth2.device.authorization.grant.enabled": "true",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
              "roles",
              "profile",
              "basic",
              "email"
            ],
            "optionalClientScopes": [
              "offline_access",
              "groups"
            ]
          }
        ],
        "clientScopes": [
          {
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "gui.order": "",
              "consent.screen.text": "${roleScopeConsentText}"
            },
            "protocolMappers": [
              {
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true",
                  "userinfo.token.claim": "true"
                }
              }
            ]
          },
          {
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "consent.screen.text": "${profileScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "name": "given name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "long"
                }
              },
              {
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "family name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "name": "acr loa level",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true"
                }
              }
            ]
          },
          {
            "name": "saml_organization",
            "description": "Organization Membership",
            "protocol": "saml",
            "attributes": {
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "name": "organization",
                "protocol": "saml",
                "protocolMapper": "saml-organization-membership-mapper",
                "consentRequired": false,
                "config": {}
              }
            ]
          },
          {
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "name": "service_account",
            "description": "Specific scope for a client enabled for service accounts",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "name": "Client IP Address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientAddress",
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientAddress",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "Client ID",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "client_id",
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "client_id",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "Client Host",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientHost",
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientHost",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "name": "basic",
            "description": "OpenID Connect scope for add all basic claims to the token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "name": "auth_time",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "AUTH_TIME",
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "auth_time",
                  "jsonType.label": "long"
                }
              },
              {
                "name": "sub",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-sub-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "access.token.claim": "true"
                }
              }
            ]
          },
          {
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "consent.screen.text": "${phoneScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "name": "organization",
            "description": "Additional claims about the organization a subject belongs to",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "consent.screen.text": "${organizationScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "name": "organization",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-organization-membership-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "introspection.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "organization",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              }
            ]
          },
          {
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              },
              {
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "consent.screen.text": "${addressScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "introspection.token.claim": "true",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          },
          {
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "consent.screen.text": "",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "access.token.claim": "true"
                }
              }
            ]
          },
          {
            "name": "groups",
            "description": "Groups scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-group-membership-mapper",
                "consentRequired": false,
                "config": {
                  "full.path": "false",
                  "multivalued": "true",
                  "userinfo.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": false,
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "consent.screen.text": "${emailScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              },
              {
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "saml_organization",
          "profile",
          "email",
          "roles",
          "web-origins",
          "acr",
          "basic"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt",
          "organization"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "referrerPolicy": "no-referrer",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "accountTheme": "keycloak",
        "eventsEnabled": false,
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [
          {
            "alias": "azure-ad-sso",
            "displayName": "Example Azure AD SSO",
            "internalId": "327027b1-25ec-4e86-90a9-b1656da27bc4",
            "providerId": "oidc",
            "enabled": false,
            "updateProfileFirstLoginMode": "on",
            "trustEmail": false,
            "storeToken": false,
            "addReadTokenRoleOnCreate": false,
            "authenticateByDefault": false,
            "linkOnly": false,
            "hideOnLogin": false,
            "firstBrokerLoginFlowAlias": "first broker login",
            "config": {
              "userInfoUrl": "https://graph.microsoft.com/oidc/userinfo",
              "validateSignature": "true",
              "acceptsPromptNoneForwardFromClient": "false",
              "tokenUrl": "https://login.microsoftonline.com/TODO-paste-tenant-id-for-azuread-tenant-here/oauth2/v2.0/token",
              "clientId": "TODO-paste-clientid-from-azuread-app-reg-here",
              "uiLocales": "false",
              "jwksUrl": "https://login.microsoftonline.com/TODO-paste-tenant-id-for-azuread-tenant-here/discovery/v2.0/keys",
              "backchannelSupported": "false",
              "issuer": "https://login.microsoftonline.com/TODO-paste-tenant-id-for-azuread-tenant-here/v2.0",
              "useJwksUrl": "true",
              "loginHint": "false",
              "pkceEnabled": "false",
              "clientAuthMethod": "client_secret_post",
              "authorizationUrl": "https://login.microsoftonline.com/TODO-paste-tenant-id-for-azuread-tenant-here/oauth2/v2.0/authorize",
              "disableUserInfo": "false",
              "logoutUrl": "https://login.microsoftonline.com/TODO-paste-tenant-id-for-azuread-tenant-here/oauth2/v2.0/logout",
              "syncMode": "IMPORT",
              "clientSecret": "dummy-value-reprovision-after-deployment",
              "passMaxAge": "false",
              "allowedClockSkew": "0"
            }
          },
          {
            "alias": "azure-b2c-sso",
            "displayName": "Example Azure B2C SSO",
            "internalId": "975fd93b-408d-4ea6-b33f-4a79e3f11afc",
            "providerId": "oidc",
            "enabled": false,
            "updateProfileFirstLoginMode": "on",
            "trustEmail": false,
            "storeToken": false,
            "addReadTokenRoleOnCreate": false,
            "authenticateByDefault": false,
            "linkOnly": false,
            "hideOnLogin": false,
            "firstBrokerLoginFlowAlias": "first broker login",
            "config": {
              "validateSignature": "true",
              "acceptsPromptNoneForwardFromClient": "false",
              "tokenUrl": "https://TODO-paste-b2c-oidc-endpoint-base-url-here/token",
              "clientId": "TODO-paste-clientid-from-b2c-app-reg-here",
              "uiLocales": "false",
              "jwksUrl": "https://TODO-paste-b2c-oidc-endpoint-base-url-here/keys",
              "backchannelSupported": "false",
              "issuer": "https://TODO-paste-b2c-oidc-endpoint-base-url-here/v2.0/",
              "useJwksUrl": "true",
              "loginHint": "false",
              "pkceEnabled": "false",
              "clientAuthMethod": "client_secret_post",
              "authorizationUrl": "https://TODO-paste-b2c-oidc-endpoint-base-url-here/authorize",
              "disableUserInfo": "false",
              "logoutUrl": "https://TODO-paste-b2c-oidc-endpoint-base-url-here/logout",
              "syncMode": "IMPORT",
              "clientSecret": "dummy-value-reprovision-after-deployment",
              "passMaxAge": "false",
              "allowedClockSkew": "0",
              "defaultScope": "2064200c-be4f-436d-8578-ae04513d8d58 openid offline_access profile",
              "guiOrder": "0"
            }
          }
        ],
        "identityProviderMappers": [
          {
            "name": "iam-admin-group-mapper",
            "identityProviderAlias": "azure-ad-sso",
            "identityProviderMapper": "oidc-advanced-group-idp-mapper",
            "config": {
              "claims": "[{\"key\":\"groups\",\"value\":\"TODO-paste-azure-iam-security-group-id-here\"}]",
              "syncMode": "FORCE",
              "are.claim.values.regex": "false",
              "group": "/iam-admin-group"
            }
          },
          {
            "name": "service-admin-group-mapper",
            "identityProviderAlias": "azure-ad-sso",
            "identityProviderMapper": "oidc-advanced-group-idp-mapper",
            "config": {
              "claims": "[{\"key\":\"groups\",\"value\":\"TODO-paste-azure-iam-security-group-id-here\"}]",
              "syncMode": "FORCE",
              "are.claim.values.regex": "false",
              "group": "/service-admin-group"
            }
          },
          {
            "name": "edge-manager-group-mapper",
            "identityProviderAlias": "azure-ad-sso",
            "identityProviderMapper": "oidc-advanced-group-idp-mapper",
            "config": {
              "claims": "[{\"key\":\"groups\",\"value\":\"TODO-paste-azure-iam-security-group-id-here\"}]",
              "syncMode": "FORCE",
              "are.claim.values.regex": "false",
              "group": "/edge-manager-group"
            }
          },
          {
            "name": "edge-operator-group-mapper",
            "identityProviderAlias": "azure-ad-sso",
            "identityProviderMapper": "oidc-advanced-group-idp-mapper",
            "config": {
              "claims": "[{\"key\":\"groups\",\"value\":\"TODO-paste-azure-iam-security-group-id-here\"}]",
              "syncMode": "FORCE",
              "are.claim.values.regex": "false",
              "group": "/edge-operator-group"
            }
          },
          {
            "name": "host-manager-group-mapper",
            "identityProviderAlias": "azure-ad-sso",
            "identityProviderMapper": "oidc-advanced-group-idp-mapper",
            "config": {
              "claims": "[{\"key\":\"groups\",\"value\":\"TODO-paste-azure-iam-security-group-id-here\"}]",
              "syncMode": "FORCE",
              "are.claim.values.regex": "false",
              "group": "/host-manager-group"
            }
          },
          {
            "name": "sre-group-mapper",
            "identityProviderAlias": "azure-ad-sso",
            "identityProviderMapper": "oidc-advanced-group-idp-mapper",
            "config": {
              "claims": "[{\"key\":\"groups\",\"value\":\"TODO-paste-azure-iam-security-group-id-here\"}]",
              "syncMode": "FORCE",
              "are.claim.values.regex": "false",
              "group": "/sre-group"
            }
          },
          {
            "name": "First Name",
            "identityProviderAlias": "azure-b2c-sso",
            "identityProviderMapper": "oidc-user-attribute-idp-mapper",
            "config": {
              "syncMode": "INHERIT",
              "are.claim.values.regex": "false",
              "claim": "First Name",
              "user.attribute": "firstName"
            }
          },
          {
            "name": "Last Name",
            "identityProviderAlias": "azure-b2c-sso",
            "identityProviderMapper": "oidc-user-attribute-idp-mapper",
            "config": {
              "syncMode": "INHERIT",
              "are.claim.values.regex": "false",
              "claim": "Last Name",
              "user.attribute": "lastName"
            }
          },
          {
            "name": "email",
            "identityProviderAlias": "azure-b2c-sso",
            "identityProviderMapper": "oidc-user-attribute-idp-mapper",
            "config": {
              "syncMode": "INHERIT",
              "are.claim.values.regex": "false",
              "claim": "Email",
              "user.attribute": "email"
            }
          }
        ],
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Account verification options",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "browser",
            "description": "Browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "forms",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "User creation or linking",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "registration",
            "description": "Registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": true,
                "flowAlias": "registration form",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "registration form",
            "description": "Registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 50,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 60,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-terms-and-conditions",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 70,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 40,
                "autheticatorFlow": true,
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
          },
          {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
          },
          {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
          },
          {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
          },
          {
            "alias": "VERIFY_PROFILE",
            "name": "Verify Profile",
            "providerId": "VERIFY_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 90,
            "config": {}
          },
          {
            "alias": "delete_credential",
            "name": "Delete Credential",
            "providerId": "delete_credential",
            "enabled": true,
            "defaultAction": false,
            "priority": 100,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "firstBrokerLoginFlow": "first broker login"
      }
    }
  }
}
